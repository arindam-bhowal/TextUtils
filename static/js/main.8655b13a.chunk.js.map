{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","appName","onClick","toggleMode","htmlFor","Textform","useState","text","setText","isEmpty","length","style","color","Heading","backgroundColor","value","onChange","e","target","rows","placeholder","disabled","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","filter","str","defaultProps","Alert","height","alertMsg","class","Type","role","word","lower","charAt","slice","capitalize","msg","About","myStyle","App","setMode","alert","setAlert","message","setTimeout","displayMode","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8655b13a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/\">{props.appName}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`${props.mode==='light'? 'Enable dark mode':'Disable dark mode'}`}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    appName: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'BootStrap'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    function handleOnChange(e) {\r\n        // console.log(e.target.value);\r\n        setText(e.target.value);\r\n    }\r\n    function handleUpClick() {\r\n        // console.log(\"Button is clicked\", text);\r\n        setText(text.toUpperCase());\r\n        props.showAlert('Converted to uppercase!','success')\r\n    }\r\n    function handleLowClick() {\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    function handleClear() {\r\n        setText('');\r\n        props.showAlert('TextBox cleared','success');\r\n    }\r\n    function handleCopy() {\r\n        let text = document.getElementById('exampleFormControlTextarea1');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert('Copied to clipboard!!','success');\r\n    }\r\n    function handleExtraSpaces(){\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(' '));\r\n        props.showAlert('Extra spaces removed!!', 'success');\r\n    }\r\n\r\n    // const[text, setText]= useState('Enter your text here');\r\n    const [text, setText] = useState('');\r\n    // text = \"I am Arindam Bhowal\"; Wrong way to update text\r\n    // setText(\"I am Arindam Bhowal\"); Correct way to update text\r\n\r\n    let isEmpty= false;\r\n    if(text.length===0){\r\n        isEmpty=true;\r\n    }\r\n    else{\r\n        isEmpty=false\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\">\r\n                <div className=\"mb-3\">\r\n                    <h2 style= {{color: props.mode==='light'? 'black': 'white'}}>{props.Heading}</h2>\r\n                    <textarea className=\"form-control\" style={{ backgroundColor: props.mode ==='dark'? '#989cce': 'white', color: props.mode=== 'dark'?'white': 'black'}}\r\n                    value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"10\" placeholder=\"Enter your text here\"></textarea>\r\n            </div>\r\n            <button disabled={isEmpty} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClear}>Clear</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n            <div className=\"contsiner my-3\" style= {{color: props.mode==='light'? 'black': 'white'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.split(/\\s+/).filter((str)=>{return str.length!==0}).length} words and {text.length} characters</p>\r\n                <h3>Preview:</h3>\r\n                <p>{text.length > 0 ? text : 'Enter text in the text-box to preview here'}</p>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    function capitalize(word) {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '50px' }}>\r\n            {props.alertMsg &&  <div class={`alert alert-${props.alertMsg.Type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alertMsg.Type)}</strong> {props.alertMsg.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n\r\n// If props.alert is null then the code written after && won’t be shown otherwise the code inside <div></div> tag will be displayed.","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    const myStyle={\r\n        color: props.mode==='light'? 'black': 'white'\r\n    }\r\n    return (\r\n        <div className='container my-3' style={myStyle}>\r\n        <h1>About</h1>\r\n        <hr/><hr />\r\n        <p className='my-3'>This is app is built in react app. This is basically does is it takes your text, manupulates it and gives back the text to you. It is a very basic app.\r\n         <p><br />\r\n        Designed and maintained by- Arindam Bhowal. <br /> Inspired by- Code with Harry. <br />\r\n        <br />\r\n        This is my first app using React built while learing react. I hope you will like my app and support me. I promise to make more such wonderfull apps with better functionility in the future.\r\n        </p> </p> \r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n\n\n  function toggleMode() {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#1b216b';\n      showAlert('Dark Mode Enabled!!', 'success');\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Dark Mode Disabled!!', 'success');\n    }\n    // console.log(mode);\n  }\n\n  // setInterval(() => {\n  //   document.title='TextUtils is the best';\n  // }, 2000);\n  // setInterval(() => {\n  //   document.title='install now';\n  // }, 1100);\n\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      Type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n\n  return (\n    <>\n      {/* <Navbar appName=\"TextUtils\" /> */}\n      <Router>\n        <Navbar title=\"Arindam\" appName=\"TextUtils\" displayMode={mode} toggleMode={toggleMode} mode={mode} />\n        <Alert alertMsg={alert} />\n\n        <Switch>\n          <Route exact path=\"/About\">\n            <About mode={mode} />\n          </Route>\n          <Route path=\"/\">\n            <TextForm showAlert={showAlert} Heading='Try TextUtils - word counter, character counter, remove extra spaces' mode={mode} />\n          </Route>\n        </Switch>\n\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}